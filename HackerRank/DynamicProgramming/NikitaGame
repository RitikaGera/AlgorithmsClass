package DynamicProgramming;

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class NikitaGame {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner sc = new Scanner(System.in);
        int testcases = sc.nextInt();
        for( int i = 0; i < testcases; i++){
            int n = sc.nextInt();
            int[] input = new int[n];
            for( int j = 0; j < n; j++ ){
                input[j] = sc.nextInt();
              
            }
            recur_find(0, n-1, n, input,0, 0, 0);
            //int score = recur_find(0, n-1, n, input);
            //System.out.println(score); 
        }
    }
    
    public static void recur_find(int l, int k, int n, int[] input, int leftsum, int rightsum, int score){
    	
        if(l >= k){
        	return;
        }
        
        	leftsum += input[l];
        	System.out.println("leftsum: "+leftsum);
        	
        	rightsum +=input[k];
        	System.out.println("rightsum: "+ rightsum);
        	
        	while(rightsum > leftsum){
        		l++;
        		leftsum += input[l];
        	}
        	while(rightsum > leftsum){
        		k--;
        		rightsum += input[k];
        		
        	}
        	
        	while(l < k && leftsum == rightsum){
        			l++;
            		k--;
            		leftsum += input[l];
            		rightsum +=input[k];
       		}
        	
        	if(l < n - k){
        			l = k;
        			k = n - 1;
       		}
       		else{
        			k = l;
        			l = 0;
       		}
        		
      		score++;
       		recur_find(l, k, n, input,0,0,score);
        		
        		
        	
        System.out.println(score);
        //return score;
    }

}
